;; Analyzed by ClojureScript 0.0-3058
{:use-macros {defroute secretary.core}, :excludes #{}, :name collab-board.core, :imports nil, :requires {ajax.core ajax.core, reagent-forms.core reagent-forms.core, secretary secretary.core, secretary.core secretary.core, reagent.core reagent.core, reagent reagent.core}, :uses {POST ajax.core, atom reagent.core, bind-fields reagent-forms.core}, :defs {begin-path {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 18, :end-line 80, :column 7, :line 80, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/begin-path, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 80, :end-line 80, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ctx {:meta {:end-column 10, :end-line 23, :column 6, :line 23, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :file "src-cljs\\collab_board\\core.cljs", :line 23, :column 1, :end-line 23, :end-column 10, :test true, :name collab-board.core/ctx}, send-remove-path {:protocol-inline nil, :meta {:arglists (quote ([id])), :end-column 24, :end-line 50, :column 7, :line 50, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/send-remove-path, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 24, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id])), :test true}, get-xy {:protocol-inline nil, :meta {:arglists (quote ([ev])), :end-column 14, :end-line 94, :column 7, :line 94, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/get-xy, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 14, :method-params ([ev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 1}), :line 94, :end-line 94, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ev])), :test true}, on-path-update {:protocol-inline nil, :meta {:arglists (quote ([ev])), :end-column 22, :end-line 135, :column 7, :line 135, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/on-path-update, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 22, :method-params ([ev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 1}), :line 135, :end-line 135, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ev])), :test true}, render-path {:protocol-inline nil, :meta {:arglists (quote ([pth])), :end-column 19, :end-line 98, :column 7, :line 98, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/render-path, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 19, :method-params ([pth]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 1}), :line 98, :end-line 98, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pth])), :test true}, canvas-mousedown {:protocol-inline nil, :meta {:arglists (quote ([ev])), :end-column 24, :end-line 119, :column 7, :line 119, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/canvas-mousedown, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 24, :method-params ([ev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 1}), :line 119, :end-line 119, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ev])), :test true}, remove-paths-by-point {:protocol-inline nil, :meta {:arglists (quote ([p])), :end-column 29, :end-line 63, :column 7, :line 63, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/remove-paths-by-point, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 29, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag boolean, :variadic false, :max-fixed-arity 1}), :line 63, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :test true}, stroke {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 14, :end-line 90, :column 7, :line 90, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/stroke, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 90, :end-line 90, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, init! {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 13, :end-line 186, :column 7, :line 186, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/init!, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 186, :end-line 186, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, remove-path {:protocol-inline nil, :meta {:arglists (quote ([id])), :end-column 19, :end-line 54, :column 7, :line 54, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/remove-path, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 19, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 1}), :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id])), :test true}, socket {:meta {:end-column 13, :end-line 21, :column 6, :line 21, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :file "src-cljs\\collab_board\\core.cljs", :line 21, :column 1, :end-line 21, :end-column 13, :test true, :name collab-board.core/socket}, init-socket {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 19, :end-line 179, :column 7, :line 179, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/init-socket, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 179, :end-line 179, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, move-to {:protocol-inline nil, :meta {:arglists (quote ([[x y]])), :end-column 15, :end-line 83, :column 7, :line 83, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/move-to, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 15, :method-params ([p__31948]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 83, :end-line 83, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[x y]])), :test true}, canvas-mousemove {:protocol-inline nil, :meta {:arglists (quote ([ev])), :end-column 24, :end-line 152, :column 7, :line 152, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/canvas-mousemove, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 24, :method-params ([ev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 152, :end-line 152, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ev])), :test true}, line-to {:protocol-inline nil, :meta {:arglists (quote ([[x y]])), :end-column 15, :end-line 87, :column 7, :line 87, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/line-to, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 15, :method-params ([p__31951]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 87, :end-line 87, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[x y]])), :test true}, key-down {:protocol-inline nil, :meta {:arglists (quote ([ev])), :end-column 16, :end-line 168, :column 7, :line 168, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/key-down, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 16, :method-params ([ev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 168, :end-line 168, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ev])), :test true}, debug {:protocol-inline nil, :meta {:arglists (quote ([s])), :end-column 13, :end-line 26, :column 7, :line 26, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/debug, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 13, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, add-send-path {:protocol-inline nil, :meta {:arglists (quote ([pth])), :end-column 21, :end-line 73, :column 7, :line 73, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/add-send-path, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 21, :method-params ([pth]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 73, :end-line 73, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pth])), :test true}, state {:meta {:end-column 12, :end-line 8, :column 6, :line 8, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :file "src-cljs\\collab_board\\core.cljs", :line 8, :column 1, :end-line 8, :end-column 12, :test true, :name collab-board.core/state}, canvas {:meta {:end-column 13, :end-line 17, :column 6, :line 17, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :file "src-cljs\\collab_board\\core.cljs", :line 17, :column 1, :end-line 17, :end-column 13, :test true, :name collab-board.core/canvas}, add-path {:protocol-inline nil, :meta {:arglists (quote ([id pth])), :end-column 16, :end-line 41, :column 7, :line 41, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/add-path, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 16, :method-params ([id pth]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 2}), :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id pth])), :test true}, send-path {:protocol-inline nil, :meta {:arglists (quote ([pth id action])), :end-column 17, :end-line 35, :column 7, :line 35, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/send-path, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 17, :method-params ([pth id action]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 3}), :line 35, :end-line 35, :max-fixed-arity 3, :fn-var true, :arglists (quote ([pth id action])), :test true}, get-uuid {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 16, :end-line 31, :column 7, :line 31, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/get-uuid, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 31, :end-line 31, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, key-up {:protocol-inline nil, :meta {:arglists (quote ([ev])), :end-column 14, :end-line 172, :column 7, :line 172, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/key-up, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 14, :method-params ([ev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 172, :end-line 172, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ev])), :test true}, canvas-mouseup {:protocol-inline nil, :meta {:arglists (quote ([ev])), :end-column 22, :end-line 127, :column 7, :line 127, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/canvas-mouseup, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 22, :method-params ([ev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 1}), :line 127, :end-line 127, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ev])), :test true}, redraw {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 14, :end-line 110, :column 7, :line 110, :file "C:\\github\\shiny-collaboration-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/redraw, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 0}), :line 110, :end-line 110, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}}, :require-macros {secretary.core secretary.core}, :cljs.analyzer/constants {:order [:is-drawing :is-erasing :ctrl-down :current-path :paths :paths-by-points], :seen #{:is-drawing :paths :current-path :is-erasing :paths-by-points :ctrl-down}}, :doc nil}