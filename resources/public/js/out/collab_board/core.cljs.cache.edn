;; Analyzed by ClojureScript 0.0-3058
{:use-macros {defroute secretary.core}, :excludes #{}, :name collab-board.core, :imports nil, :requires {ajax.core ajax.core, reagent-forms.core reagent-forms.core, secretary secretary.core, secretary.core secretary.core, reagent.core reagent.core, reagent reagent.core}, :uses {POST ajax.core, atom reagent.core, bind-fields reagent-forms.core}, :defs {begin-path {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 18, :end-line 78, :column 7, :line 78, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/begin-path, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 78, :end-line 78, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ctx {:meta {:end-column 10, :end-line 20, :column 6, :line 20, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :file "src-cljs\\collab_board\\core.cljs", :line 20, :column 1, :end-line 20, :end-column 10, :test true, :name collab-board.core/ctx}, send-remove-path {:protocol-inline nil, :meta {:arglists (quote ([id])), :end-column 24, :end-line 48, :column 7, :line 48, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/send-remove-path, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 24, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id])), :test true}, get-xy {:protocol-inline nil, :meta {:arglists (quote ([ev])), :end-column 14, :end-line 92, :column 7, :line 92, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/get-xy, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 14, :method-params ([ev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 1}), :line 92, :end-line 92, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ev])), :test true}, on-path-update {:protocol-inline nil, :meta {:arglists (quote ([ev])), :end-column 22, :end-line 133, :column 7, :line 133, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/on-path-update, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 22, :method-params ([ev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 1}), :line 133, :end-line 133, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ev])), :test true}, render-path {:protocol-inline nil, :meta {:arglists (quote ([pth])), :end-column 19, :end-line 96, :column 7, :line 96, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/render-path, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 19, :method-params ([pth]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 1}), :line 96, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pth])), :test true}, canvas-mousedown {:protocol-inline nil, :meta {:arglists (quote ([ev])), :end-column 24, :end-line 117, :column 7, :line 117, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/canvas-mousedown, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 24, :method-params ([ev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 1}), :line 117, :end-line 117, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ev])), :test true}, remove-paths-by-point {:protocol-inline nil, :meta {:arglists (quote ([p])), :end-column 29, :end-line 61, :column 7, :line 61, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/remove-paths-by-point, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 29, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag boolean, :variadic false, :max-fixed-arity 1}), :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :test true}, stroke {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 14, :end-line 88, :column 7, :line 88, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/stroke, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 88, :end-line 88, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, init! {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 13, :end-line 177, :column 7, :line 177, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/init!, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 177, :end-line 177, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, remove-path {:protocol-inline nil, :meta {:arglists (quote ([id])), :end-column 19, :end-line 52, :column 7, :line 52, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/remove-path, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 19, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 1}), :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id])), :test true}, socket {:meta {:end-column 13, :end-line 26, :column 6, :line 26, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :file "src-cljs\\collab_board\\core.cljs", :line 26, :column 1, :end-line 26, :end-column 13, :test true, :name collab-board.core/socket}, move-to {:protocol-inline nil, :meta {:arglists (quote ([[x y]])), :end-column 15, :end-line 81, :column 7, :line 81, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/move-to, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 15, :method-params ([p__52231]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[x y]])), :test true}, canvas-mousemove {:protocol-inline nil, :meta {:arglists (quote ([ev])), :end-column 24, :end-line 150, :column 7, :line 150, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/canvas-mousemove, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 24, :method-params ([ev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 150, :end-line 150, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ev])), :test true}, line-to {:protocol-inline nil, :meta {:arglists (quote ([[x y]])), :end-column 15, :end-line 85, :column 7, :line 85, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/line-to, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 15, :method-params ([p__52234]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 85, :end-line 85, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[x y]])), :test true}, key-down {:protocol-inline nil, :meta {:arglists (quote ([ev])), :end-column 16, :end-line 166, :column 7, :line 166, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/key-down, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 16, :method-params ([ev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 166, :end-line 166, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ev])), :test true}, debug {:protocol-inline nil, :meta {:arglists (quote ([s])), :end-column 13, :end-line 23, :column 7, :line 23, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/debug, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 13, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, add-send-path {:protocol-inline nil, :meta {:arglists (quote ([pth])), :end-column 21, :end-line 71, :column 7, :line 71, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/add-send-path, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 21, :method-params ([pth]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 71, :end-line 71, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pth])), :test true}, state {:meta {:end-column 12, :end-line 8, :column 6, :line 8, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :file "src-cljs\\collab_board\\core.cljs", :line 8, :column 1, :end-line 8, :end-column 12, :test true, :name collab-board.core/state}, canvas {:meta {:end-column 13, :end-line 17, :column 6, :line 17, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :file "src-cljs\\collab_board\\core.cljs", :line 17, :column 1, :end-line 17, :end-column 13, :test true, :name collab-board.core/canvas}, add-path {:protocol-inline nil, :meta {:arglists (quote ([id pth])), :end-column 16, :end-line 39, :column 7, :line 39, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/add-path, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 16, :method-params ([id pth]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 2}), :line 39, :end-line 39, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id pth])), :test true}, send-path {:protocol-inline nil, :meta {:arglists (quote ([pth id action])), :end-column 17, :end-line 33, :column 7, :line 33, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/send-path, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 17, :method-params ([pth id action]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 3}), :line 33, :end-line 33, :max-fixed-arity 3, :fn-var true, :arglists (quote ([pth id action])), :test true}, get-uuid {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 16, :end-line 29, :column 7, :line 29, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/get-uuid, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 29, :end-line 29, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, key-up {:protocol-inline nil, :meta {:arglists (quote ([ev])), :end-column 14, :end-line 170, :column 7, :line 170, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/key-up, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 14, :method-params ([ev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 170, :end-line 170, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ev])), :test true}, canvas-mouseup {:protocol-inline nil, :meta {:arglists (quote ([ev])), :end-column 22, :end-line 125, :column 7, :line 125, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/canvas-mouseup, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 22, :method-params ([ev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 1}), :line 125, :end-line 125, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ev])), :test true}, redraw {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 14, :end-line 108, :column 7, :line 108, :file "C:\\github\\collab-board\\collab-board\\src-cljs\\collab_board\\core.cljs"}, :name collab-board.core/redraw, :variadic false, :file "src-cljs\\collab_board\\core.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 0}), :line 108, :end-line 108, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}}, :require-macros {secretary.core secretary.core}, :cljs.analyzer/constants {:order [:is-drawing :is-erasing :ctrl-down :current-path :paths :paths-by-points], :seen #{:is-drawing :paths :current-path :is-erasing :paths-by-points :ctrl-down}}, :doc nil}